// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String       @id @default(cuid())
  name       String
  email      String       @unique
  password   String
  phone      String
  address    String
  city       String
  roles      Json         @default("[\"ROLE_USER\"]")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  orders     Orders[]
  coordonner Coordonner[]
  store      Stores[]
}

model Coordonner {
  id        String  @id @default(cuid())
  longitude Float
  latitude  Float
  user      Users?  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String?
  store     Stores? @relation(fields: [store_id], references: [id], onDelete: Cascade)
  store_id  String?
  @@index([longitude, latitude])
}

model Stores {
  id         String       @id @default(cuid())
  name       String
  pseudo     String?
  city       String
  address    String
  logo       String?
  user      Users?  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  coordonner Coordonner[]
  product    Products[]    
}


model Products {
  id          String        @id @default(cuid())
  brand       String
  width       Float
  price       Float
  stock       Int
  status     StockStatus @default(AVAILABLE) 
  store      Stores?   @relation(fields: [store_id], references: [id], onDelete: Cascade)
  store_id   String?
  description String        @db.Text
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ordersItems OrdersItems[]
  type        String     
}

model Orders {
  id              String         @id @default(cuid())
  delivery_status DeliveryStatus
  status          StatusCommande
  total_price     Float          @default(0)
  payment_status  PaymentStatus  @default(PENDING) 
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  user            Users?         @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         String?
  Commandes_Items OrdersItems[]
  deliveries      Delivies[]
}

model OrdersItems {
  id          String    @id @default(cuid())
  quantity    Int
  products    Products? @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id  String?
  orders      Orders?   @relation(fields: [commande_id], references: [id], onDelete: Cascade)
  commande_id String?
}

model Delivies {
  id               String   @id @default(cuid())
  address_delivery String
  deliveryStatus   DeliveryStatus
  address          String
  commande         Orders?  @relation(fields: [commande_id], references: [id], onDelete: Cascade)
  commande_id      String?
  deliverer        Deliver? @relation(fields: [deliver_id], references: [id], onDelete: Cascade) 
  deliver_id       String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Deliver {
  id    String @id @default(cuid())
  name  String
  phone String
  deliveries Delivies[] 
}

enum StatusCommande {
  EN_COURS
  LIVREE
  ANNULEE
}

enum DeliveryStatus {
  EN_ATTENTE
  EN_ROUTE
  LIVREE
}

enum StockStatus {
  AVAILABLE
  OUT_OF_STOCK
}

enum PaymentStatus {
  PENDING
  PAID
  REFUNDED
}
